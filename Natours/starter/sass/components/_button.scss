/*Bouton*/
.btn{

    &:link, /*classe bouton globale*/
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block;
        border-radius: 10rem;
        transition: all .2s; /*initilisation de l'animation des transform*/ 
        position: relative; /*permet de gérer le pos. absolue du bouton::after*/
        font-size: 1.6rem;
    }

   &:hover{
        transform: translateY(-3px);
        box-shadow: 0 1rem 2rem rgba($color-black,.2);/*décalage X puis Y, floue et couleur)*/

        &::after{/*pseudo-classe du pseudo-élément*/
            transform: scaleX(1.4) scaleY(1.6); /*met à l'échelle l'élément*/
            opacity: 0;
        }
    }
    
   &:active{
        transform: translateY(-1px);
        box-shadow: 0 .5rem 1rem rgba($color-black,.2);
    }

    &--white{ /*classe permettant de personnaliser un bouton spécifique*/
        background-color: $color-white;
        color: $color-grey-dark;

        &::after{
            background-color: $color-white;
        }
    }

    &::after{ /*pseudi-éléments*/
        content:""; /*déclaration obligatoire*/
        display: inline-block; /*déclaration obligatoire*/
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute; /*permet de placer le pseudo-élément en fonction de la position relative du bouton parent*/
        top: 0;
        left: 0;
        z-index: -1; /*place l'élément derrière le parent*/
        transition: all .4s; /*gère l'animation des transform*/
    }

    &--animated{
        animation  : moveInBottom .5s ease-out .75s;/*dernière valeur est un délai*/
        animation-fill-mode: backwards; /*permet de n'appliquer les valeurs de 0% qu'après le délai*/
    }
}